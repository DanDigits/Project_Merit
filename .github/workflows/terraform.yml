on:
  workflow_call:
    inputs:
      branch:
        type: string
        required: true
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      db_uri:
        required: true
      ecr_repo_name:
        required: true
      cluster_name:
        required: true
      service_name:
        required: true
      domain_cert:
        required: true

name: "Deploy Terraform"
jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0
          terraform_wrapper: false
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
      - name: Terraform Init
        id: init
        run: terraform init -reconfigure -backend-config="terraform/env/${{ inputs.branch }}/state.tfvars"
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var-file="terraform/env/${{ inputs.branch }}/instance.tfvars" -var ecr_repo_name="${{ secrets.ecr_repo_name}}" -var cluster_name="${{ secrets.cluster_name}}" -var db_uri="${{ secrets.db_uri}}" -var service_name="${{ secrets.service_name}}" -var domain_certificate="${{ secrets.domain_cert}}"
      - name: Terraform Apply
        env:
          TF_VAR_db_uri: ${{ secrets.db_uri }}
          TF_VAR_ecr_repo_name: ${{ secrets.ecr_repo_name }}
          TF_VAR_cluster_name: ${{ secrets.cluster_name }}
          TF_VAR_service_name: ${{ secrets.service_name }}
        run: terraform apply -auto-approve
